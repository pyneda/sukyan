definitions:
  api.ActionResponse:
    properties:
      message:
        type: string
    type: object
  api.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  api.HistorySummary:
    properties:
      depth:
        type: integer
      id:
        type: integer
      method:
        type: string
      parameters_count:
        type: integer
      status_code:
        type: integer
      url:
        type: string
    type: object
  api.PassiveScanInput:
    properties:
      items:
        items:
          type: integer
        type: array
    required:
    - items
    type: object
  db.GroupedIssue:
    properties:
      code:
        type: string
      count:
        type: integer
      severity:
        type: string
      title:
        type: string
    type: object
  db.JwtFilters:
    properties:
      algorithm:
        enum:
        - HS256
        - HS384
        - HS512
        - RS256
        - RS384
        - RS512
        - ES256
        - ES384
        - ES512
        type: string
      audience:
        type: string
      issuer:
        type: string
      sort_by:
        description: Example validation rule for sort_by
        enum:
        - token
        - header
        - issuer
        - id
        - algorithm
        - subject
        - audience
        - expiration
        - issued_at
        type: string
      sort_order:
        description: Example validation rule for sort_order
        enum:
        - asc
        - desc
        type: string
      subject:
        type: string
    type: object
  db.MessageDirection:
    enum:
    - sent
    - received
    type: string
    x-enum-varnames:
    - MessageSent
    - MessageReceived
  db.Task:
    properties:
      created_at:
        type: string
      id:
        type: integer
      started_at:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  db.TaskJob:
    properties:
      completed_at:
        type: string
      created_at:
        type: string
      id:
        type: integer
      status:
        type: string
      task_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  db.WebSocketMessage:
    properties:
      connection_id:
        type: integer
      created_at:
        type: string
      direction:
        allOf:
        - $ref: '#/definitions/db.MessageDirection'
        description: direction of the message
      id:
        type: integer
      mask:
        type: boolean
      opcode:
        type: number
      payload_data:
        type: string
      timestamp:
        description: timestamp for when the message was sent/received
        type: string
      updated_at:
        type: string
    type: object
  db.Workspace:
    properties:
      code:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/history:
    get:
      description: Get history with optional pagination and filtering by status codes,
        HTTP methods, and sources
      parameters:
      - default: 50
        description: Size of each page
        in: query
        name: page_size
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - description: Comma-separated list of status codes to filter by
        in: query
        name: status
        type: string
      - description: Comma-separated list of HTTP methods to filter by
        in: query
        name: methods
        type: string
      - description: Comma-separated list of sources to filter by
        in: query
        name: sources
        type: string
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get history
      tags:
      - History
  /api/v1/history/{id}/children:
    get:
      consumes:
      - application/json
      description: Get all the other history items that have the same depth or more
        than the provided history ID and that start with the same URL
      parameters:
      - description: History ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.HistorySummary'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get children history
      tags:
      - History
  /api/v1/history/root-nodes:
    get:
      consumes:
      - application/json
      description: Get all the root history items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.HistorySummary'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Gets all root history nodes
      tags:
      - History
  /api/v1/history/websocket/connections:
    get:
      description: Get WebSocket connections with optional pagination
      parameters:
      - default: 50
        description: Size of each page
        in: query
        name: page_size
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get WebSocket connections
      tags:
      - History WebSocket
  /api/v1/history/websocket/messages:
    get:
      description: Get WebSocket messages with optional pagination and filtering by
        connection id
      parameters:
      - default: 50
        description: Size of each page
        in: query
        name: page_size
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - description: Filter messages by WebSocket connection ID
        in: query
        name: connection_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.WebSocketMessage'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get WebSocket messages
      tags:
      - History WebSocket
  /api/v1/interactions:
    get:
      description: Get interactions with optional pagination and protocols filter
      parameters:
      - default: 50
        description: Size of each page
        in: query
        name: page_size
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - description: Comma-separated list of protocols to filter by
        in: query
        name: protocols
        type: string
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get interactions
      tags:
      - Interactions
  /api/v1/issues:
    get:
      consumes:
      - application/json
      description: Retrieves all issues with a count
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List all issues
      tags:
      - Issues
  /api/v1/issues/grouped:
    get:
      consumes:
      - application/json
      description: Retrieves all issues grouped
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.GroupedIssue'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List all issues grouped
      tags:
      - Issues
  /api/v1/scan/active:
    post:
      consumes:
      - application/json
      description: Receives a list of items and schedules them for active scanning
      parameters:
      - description: List of items
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.PassiveScanInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ActionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Submit items for active scanning
      tags:
      - Scan
  /api/v1/scan/passive:
    post:
      consumes:
      - application/json
      description: Receives a list of items and schedules them for passive scanning
      parameters:
      - description: List of items
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.PassiveScanInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ActionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Submit items for passive scanning
      tags:
      - Scan
  /api/v1/tasks:
    get:
      consumes:
      - application/json
      description: Retrieves tasks based on pagination and status filters
      parameters:
      - default: 50
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - description: Comma-separated list of statuses to filter
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Task'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List tasks with pagination and filtering
      tags:
      - Tasks
  /api/v1/tasks/jobs:
    get:
      consumes:
      - application/json
      description: Allows to filter and search task jobs
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - default: 50
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - description: Comma-separated list of statuses to filter
        in: query
        name: status
        type: string
      - description: Comma-separated list of titles to filter
        in: query
        name: title
        type: string
      - description: Completed at date to filter
        in: query
        name: completed_at
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.TaskJob'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Search Task Jobs
      tags:
      - Tasks
  /api/v1/tokens/jwts:
    post:
      consumes:
      - application/json
      description: Retrieves a list of JWTs with optional filtering and sorting options
      parameters:
      - description: Filtering and sorting options
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/db.JwtFilters'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List JWTs with filtering and sorting
      tags:
      - JWT
  /api/v1/workspaces:
    get:
      consumes:
      - application/json
      description: Retrieves all workspaces with a count
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Workspace'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List all workspaces
      tags:
      - Workspaces
swagger: "2.0"
