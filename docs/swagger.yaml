definitions:
  api.ActionResponse:
    properties:
      message:
        type: string
    type: object
  api.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  api.HistorySummary:
    properties:
      depth:
        type: integer
      id:
        type: integer
      method:
        type: string
      parameters_count:
        type: integer
      status_code:
        type: integer
      url:
        type: string
    type: object
  api.IssueUpdateResponse:
    properties:
      issue:
        $ref: '#/definitions/db.Issue'
      message:
        type: string
    type: object
  api.PassiveScanInput:
    properties:
      items:
        items:
          type: integer
        type: array
    required:
    - items
    type: object
  api.Renew:
    properties:
      refresh_token:
        type: string
    type: object
  api.RenewTokensResponse:
    properties:
      error:
        type: boolean
      msg:
        type: string
      tokens:
        $ref: '#/definitions/auth.Tokens'
    type: object
  api.ReportRequest:
    properties:
      format:
        $ref: '#/definitions/report.ReportFormat'
      title:
        type: string
      workspace_id:
        type: integer
    type: object
  api.RootNode:
    properties:
      depth:
        type: integer
      id:
        type: integer
      url:
        type: string
    type: object
  api.SignIn:
    properties:
      email:
        maxLength: 255
        type: string
      password:
        maxLength: 255
        type: string
    required:
    - email
    - password
    type: object
  api.SignInResponse:
    properties:
      error:
        type: boolean
      msg:
        type: string
      tokens:
        $ref: '#/definitions/api.SignInTokens'
    type: object
  api.SignInTokens:
    properties:
      access:
        type: string
      refresh:
        type: string
    type: object
  api.WorkspaceCreateInput:
    properties:
      code:
        type: string
      description:
        type: string
      title:
        type: string
    type: object
  api.WorkspaceUpdateInput:
    properties:
      code:
        type: string
      description:
        type: string
      title:
        type: string
    type: object
  auth.Tokens:
    properties:
      access:
        type: string
      refresh:
        type: string
    type: object
  db.GroupedIssue:
    properties:
      code:
        type: string
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/db.IssueItem'
        type: array
      severity:
        type: string
      title:
        type: string
    type: object
  db.History:
    properties:
      created_at:
        type: string
      depth:
        type: integer
      evaluated:
        type: boolean
      id:
        type: integer
      json_web_tokens:
        items:
          $ref: '#/definitions/db.JsonWebToken'
        type: array
      method:
        type: string
      note:
        type: string
      parameters_count:
        type: integer
      raw_request:
        items:
          type: integer
        type: array
      raw_response:
        items:
          type: integer
        type: array
      request_body:
        items:
          type: integer
        type: array
      request_body_size:
        type: integer
      request_content_length:
        type: integer
      request_content_type:
        type: string
      response_body:
        items:
          type: integer
        type: array
      response_body_size:
        type: integer
      response_content_type:
        type: string
      source:
        type: string
      status_code:
        type: integer
      task_id:
        type: integer
      updated_at:
        type: string
      url:
        type: string
      workspace_id:
        type: integer
    type: object
  db.Issue:
    properties:
      code:
        type: string
      confidence:
        type: integer
      created_at:
        type: string
      curl_command:
        type: string
      cwe:
        type: integer
      description:
        type: string
      details:
        type: string
      false_positive:
        type: boolean
      http_method:
        type: string
      id:
        type: integer
      interactions:
        items:
          $ref: '#/definitions/db.OOBInteraction'
        type: array
      note:
        type: string
      payload:
        type: string
      references:
        items:
          type: string
        type: array
      remediation:
        type: string
      request:
        items:
          type: integer
        type: array
      requests:
        items:
          $ref: '#/definitions/db.History'
        type: array
      response:
        items:
          type: integer
        type: array
      severity:
        $ref: '#/definitions/db.severity'
      status_code:
        type: integer
      task_id:
        type: integer
      task_job_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      url:
        type: string
      workspace_id:
        type: integer
    type: object
  db.IssueItem:
    properties:
      confidence:
        type: integer
      id:
        type: integer
      url:
        type: string
    type: object
  db.IssuesStats:
    properties:
      critical:
        type: integer
      high:
        type: integer
      info:
        type: integer
      low:
        type: integer
      medium:
        type: integer
      unknown:
        type: integer
    type: object
  db.JsonWebToken:
    properties:
      algorithm:
        type: string
      audience:
        type: string
      created_at:
        type: string
      expiration:
        type: string
      histories:
        items:
          $ref: '#/definitions/db.History'
        type: array
      id:
        type: integer
      issued_at:
        type: string
      issuer:
        type: string
      signature:
        type: string
      subject:
        type: string
      token:
        type: string
      updated_at:
        type: string
      workspace_id:
        type: integer
    type: object
  db.JwtFilters:
    properties:
      algorithm:
        enum:
        - HS256
        - HS384
        - HS512
        - RS256
        - RS384
        - RS512
        - ES256
        - ES384
        - ES512
        type: string
      audience:
        type: string
      issuer:
        type: string
      sort_by:
        description: Example validation rule for sort_by
        enum:
        - token
        - header
        - issuer
        - id
        - algorithm
        - subject
        - audience
        - expiration
        - issued_at
        type: string
      sort_order:
        description: Example validation rule for sort_order
        enum:
        - asc
        - desc
        type: string
      subject:
        type: string
      workspace_id:
        type: integer
    type: object
  db.MessageDirection:
    enum:
    - sent
    - received
    type: string
    x-enum-varnames:
    - MessageSent
    - MessageReceived
  db.OOBInteraction:
    properties:
      created_at:
        type: string
      full_id:
        type: string
      id:
        type: integer
      issue_id:
        type: integer
      oob_test:
        $ref: '#/definitions/db.OOBTest'
      oob_test_id:
        type: integer
      protocol:
        type: string
      qtype:
        type: string
      raw_request:
        type: string
      raw_response:
        type: string
      remote_address:
        type: string
      timestamp:
        type: string
      unique_id:
        type: string
      updated_at:
        type: string
      workspace_id:
        type: integer
    type: object
  db.OOBTest:
    properties:
      code:
        type: string
      created_at:
        type: string
      history_id:
        type: integer
      id:
        type: integer
      insertion_point:
        type: string
      interaction_domain:
        type: string
      interaction_id:
        type: string
      payload:
        type: string
      target:
        type: string
      task_id:
        type: integer
      task_job_id:
        type: integer
      test_name:
        type: string
      updated_at:
        type: string
      workspace_id:
        type: integer
    type: object
  db.RequestsStats:
    properties:
      crawler:
        type: integer
      scanner:
        type: integer
    type: object
  db.SitemapNode:
    properties:
      children:
        items:
          $ref: '#/definitions/db.SitemapNode'
        type: array
      depth:
        type: integer
      id:
        type: integer
      other_ids:
        items:
          type: integer
        type: array
      path:
        type: string
      type:
        $ref: '#/definitions/db.SitemapNodeType'
      url:
        type: string
    type: object
  db.SitemapNodeType:
    enum:
    - root
    - directory
    - file
    - query
    - php
    - asp
    - jsp
    - js
    - css
    - html
    - xml
    - json
    - yaml
    - sql
    - image
    - video
    - audio
    - markdown
    - font
    type: string
    x-enum-varnames:
    - SitemapNodeTypeRoot
    - SitemapNodeTypeDirectory
    - SitemapNodeTypeFile
    - SitemapNodeTypeQuery
    - SitemapNodeTypePhp
    - SitemapNodeTypeAsp
    - SitemapNodeTypeJsp
    - SitemapNodeTypeJs
    - SitemapNodeTypeCss
    - SitemapNodeTypeHtml
    - SitemapNodeTypeXml
    - SitemapNodeTypeJson
    - SitemapNodeTypeYaml
    - SitemapNodeTypeSql
    - SitemapNodeTypeImage
    - SitemapNodeTypeVideo
    - SitemapNodeTypeAudio
    - SitemapNodeTypeMarkdown
    - SitemapNodeTypeFont
  db.Task:
    properties:
      created_at:
        type: string
      finished_at:
        type: string
      id:
        type: integer
      started_at:
        type: string
      stats:
        $ref: '#/definitions/db.TaskStats'
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      workspace_id:
        type: integer
    type: object
  db.TaskStats:
    properties:
      issues:
        $ref: '#/definitions/db.IssuesStats'
      requests:
        $ref: '#/definitions/db.RequestsStats'
    type: object
  db.WebSocketMessage:
    properties:
      connection_id:
        type: integer
      created_at:
        type: string
      direction:
        allOf:
        - $ref: '#/definitions/db.MessageDirection'
        description: direction of the message
      id:
        type: integer
      mask:
        type: boolean
      opcode:
        type: number
      payload_data:
        type: string
      timestamp:
        description: timestamp for when the message was sent/received
        type: string
      updated_at:
        type: string
    type: object
  db.Workspace:
    properties:
      code:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  db.severity:
    enum:
    - Unknown
    - Info
    - Low
    - Medium
    - High
    - Critical
    type: string
    x-enum-varnames:
    - Unknown
    - Info
    - Low
    - Medium
    - High
    - Critical
  report.ReportFormat:
    enum:
    - html
    - json
    type: string
    x-enum-varnames:
    - ReportFormatHTML
    - ReportFormatJSON
  scan.FullScanOptions:
    properties:
      exclude_patterns:
        items:
          type: string
        type: array
      headers:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      insertion_points:
        items:
          type: string
        type: array
      max_depth:
        minimum: 0
        type: integer
      max_pages_to_crawl:
        minimum: 0
        type: integer
      mode:
        enum:
        - fast
        - smart
        - fuzz
        type: string
      pages_pool_size:
        maximum: 100
        minimum: 1
        type: integer
      start_urls:
        items:
          type: string
        type: array
      title:
        maxLength: 255
        minLength: 1
        type: string
      workspace_id:
        minimum: 0
        type: integer
    required:
    - start_urls
    - workspace_id
    type: object
info:
  contact: {}
  description: The Sukyan API documentation.
  title: Sukyan API
  version: "0.1"
paths:
  /api/v1/auth/token/renew:
    post:
      consumes:
      - application/json
      description: Renew access and refresh tokens.
      parameters:
      - description: Refresh token
        in: body
        name: refresh_token
        required: true
        schema:
          $ref: '#/definitions/api.Renew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RenewTokensResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: renew access and refresh tokens
      tags:
      - Auth
  /api/v1/auth/user/sign/in:
    post:
      consumes:
      - application/json
      description: Auth user and return access and refresh token.
      parameters:
      - description: SignIn payload
        in: body
        name: signIn
        required: true
        schema:
          $ref: '#/definitions/api.SignIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SignInResponse'
      summary: auth user and return access and refresh token
      tags:
      - Auth
  /api/v1/auth/user/sign/out:
    post:
      consumes:
      - application/json
      description: De-authorize user and delete refresh token.
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: de-authorize user and delete refresh token
      tags:
      - Auth
  /api/v1/history:
    get:
      description: Get history with optional pagination and filtering by status codes,
        HTTP methods, and sources
      parameters:
      - default: 50
        description: Size of each page
        in: query
        name: page_size
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - description: Comma-separated list of status codes to filter by
        in: query
        name: status
        type: string
      - description: Comma-separated list of HTTP methods to filter by
        in: query
        name: methods
        type: string
      - description: Comma-separated list of sources to filter by
        in: query
        name: sources
        type: string
      - description: Comma-separated list of history IDs to filter by
        in: query
        name: ids
        type: string
      - description: Workspace ID to filter by
        in: query
        name: workspace
        required: true
        type: integer
      - description: Task ID
        in: query
        name: task
        type: integer
      - default: '"id"'
        description: Field to sort by
        enum:
        - id
        - created_at
        - updated_at
        - status_code
        - request_body_size
        - url
        - response_body_size
        - parameters_count
        - method
        in: query
        name: sort_by
        type: string
      - default: '"desc"'
        description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get history
      tags:
      - History
  /api/v1/history/{id}/children:
    get:
      consumes:
      - application/json
      description: Get all the other history items that have the same depth or more
        than the provided history ID and that start with the same URL
      parameters:
      - description: History ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.HistorySummary'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get children history
      tags:
      - History
  /api/v1/history/root-nodes:
    get:
      consumes:
      - application/json
      description: Get all the root history items
      parameters:
      - description: Workspace ID to filter by
        in: query
        name: workspace
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.RootNode'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Gets all root history nodes
      tags:
      - History
  /api/v1/history/websocket/connections:
    get:
      description: Get WebSocket connections with optional pagination
      parameters:
      - default: 50
        description: Size of each page
        in: query
        name: page_size
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - description: Workspace ID
        in: query
        name: workspace
        required: true
        type: integer
      - description: Task ID
        in: query
        name: task
        type: integer
      - description: Comma-separated list of sources to filter by
        in: query
        name: sources
        type: string
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get WebSocket connections
      tags:
      - History
  /api/v1/history/websocket/messages:
    get:
      description: Get WebSocket messages with optional pagination and filtering by
        connection id
      parameters:
      - default: 50
        description: Size of each page
        in: query
        name: page_size
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - description: Filter messages by WebSocket connection ID
        in: query
        name: connection_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.WebSocketMessage'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get WebSocket messages
      tags:
      - History
  /api/v1/interactions:
    get:
      description: Get interactions with optional pagination and protocols filter
      parameters:
      - description: Workspace ID
        in: query
        name: workspace
        required: true
        type: integer
      - default: 50
        description: Size of each page
        in: query
        name: page_size
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - description: Comma-separated list of protocols to filter by
        in: query
        name: protocols
        type: string
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get interactions
      tags:
      - Interactions
  /api/v1/interactions/{id}:
    get:
      description: Fetch the detail of an OOB Interaction by its ID
      parameters:
      - description: Interaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.OOBInteraction'
        "404":
          description: Interaction not found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get interaction detail
      tags:
      - Interactions
  /api/v1/issues:
    get:
      consumes:
      - application/json
      description: Retrieves all issues with a count
      parameters:
      - description: Workspace ID
        in: query
        name: workspace
        required: true
        type: integer
      - description: Task ID
        in: query
        name: task
        type: integer
      - description: Task Job ID
        in: query
        name: taskjob
        type: integer
      - description: Comma-separated list of issue codes to filter by
        in: query
        name: codes
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Issue'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List all issues
      tags:
      - Issues
  /api/v1/issues/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves details of a specific issue by its ID
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Issue'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get details of an issue
      tags:
      - Issues
  /api/v1/issues/{id}/set-false-positive:
    post:
      consumes:
      - application/json
      description: Updates the FalsePositive attribute of a specific issue
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: integer
      - description: Boolean value for FalsePositive
        in: body
        name: value
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.IssueUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Set an issue as a false positive
      tags:
      - Issues
  /api/v1/issues/grouped:
    get:
      consumes:
      - application/json
      description: Retrieves all issues grouped
      parameters:
      - description: Workspace ID
        in: query
        name: workspace
        required: true
        type: integer
      - description: Task ID
        in: query
        name: task
        type: integer
      - description: Task Job ID
        in: query
        name: taskjob
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.GroupedIssue'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List all issues grouped
      tags:
      - Issues
  /api/v1/report:
    post:
      consumes:
      - application/json
      description: Generates a report for a given workspace
      parameters:
      - description: Report request
        in: body
        name: report
        required: true
        schema:
          $ref: '#/definitions/api.ReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Generate a report
      tags:
      - Reports
  /api/v1/scan/active:
    post:
      consumes:
      - application/json
      description: Receives a list of items and schedules them for active scanning.
        Either the workspace ID or task ID must be provided.
      parameters:
      - description: List of items
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.PassiveScanInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ActionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Submit items for active scanning
      tags:
      - Scan
  /api/v1/scan/full:
    post:
      consumes:
      - application/json
      description: Receives a list of URLs and other parameters and schedules them
        for a full scan
      parameters:
      - description: Configuration for full scan
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/scan.FullScanOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ActionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Submit URLs for full scanning
      tags:
      - Scan
  /api/v1/scan/passive:
    post:
      consumes:
      - application/json
      description: Receives a list of items and schedules them for passive scanning
      parameters:
      - description: List of items
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.PassiveScanInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ActionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Submit items for passive scanning
      tags:
      - Scan
  /api/v1/sitemap:
    get:
      consumes:
      - application/json
      description: Retrieves sitemap based on workspace and task ID
      parameters:
      - description: Workspace ID filter
        in: query
        name: workspace
        type: integer
      - description: Task ID filter
        in: query
        name: task
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.SitemapNode'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve sitemap based on filters
      tags:
      - Sitemap
  /api/v1/tasks:
    get:
      consumes:
      - application/json
      description: Retrieves tasks based on pagination and status filters
      parameters:
      - description: Query string to search for
        in: query
        name: query
        type: string
      - default: 50
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - description: Workspace ID
        in: query
        name: workspace
        required: true
        type: integer
      - description: Comma-separated list of statuses to filter
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Task'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List tasks with pagination and filtering
      tags:
      - Tasks
  /api/v1/tasks/jobs:
    get:
      consumes:
      - application/json
      description: Allows to filter and search task jobs
      parameters:
      - description: Task ID
        in: query
        name: task
        required: true
        type: integer
      - default: 50
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - description: Comma-separated list of statuses to filter
        in: query
        name: status
        type: string
      - description: Comma-separated list of titles to filter
        in: query
        name: title
        type: string
      - description: Comma-separated list of status codes to filter
        in: query
        name: status_codes
        type: string
      - description: Comma-separated list of methods to filter
        in: query
        name: methods
        type: string
      - description: Field to sort by
        enum:
        - id
        - history_method
        - history_url
        - history_status
        - history_parameters_count
        - title
        - status
        - started_at
        - completed_at
        - created_at
        - updated_at
        in: query
        name: sort_by
        type: string
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search Task Jobs
      tags:
      - Tasks
  /api/v1/tokens/jwts:
    post:
      consumes:
      - application/json
      description: Retrieves a list of JWTs with optional filtering and sorting options
      parameters:
      - description: Filtering and sorting options
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/db.JwtFilters'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List JWTs with filtering and sorting
      tags:
      - JWT
  /api/v1/workspaces:
    get:
      consumes:
      - application/json
      description: Retrieves all workspaces with a count
      parameters:
      - description: Search query
        in: query
        name: query
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Workspace'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List all workspaces
      tags:
      - Workspaces
    post:
      consumes:
      - application/json
      description: Saves a new workspace to the database
      parameters:
      - description: Workspace to create
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/api.WorkspaceCreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Workspace'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new workspace
      tags:
      - Workspaces
  /api/v1/workspaces/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a workspace and all associated data
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message": "Workspace successfully deleted'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a workspace
      tags:
      - Workspaces
    put:
      consumes:
      - application/json
      description: Updates a workspace by ID
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      - description: Workspace object
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/api.WorkspaceUpdateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Workspace'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a workspace
      tags:
      - Workspaces
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
